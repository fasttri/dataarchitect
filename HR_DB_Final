--DDL

CREATE TABLE CITY (
  CITY_ID SERIAL PRIMARY KEY,
  STATE VARCHAR(5),
  LOCATION VARCHAR(100),
  CITY VARCHAR(50));

INSERT INTO CITY(STATE, LOCATION, CITY)
SELECT DISTINCT STATE, LOCATION, CITY FROM PROJ_STG;

CREATE TABLE ADDRESS (
  ADDRESS_ID SERIAL PRIMARY KEY,
  ADDRESS VARCHAR(200),
  CITY_ID INT REFERENCES CITY(CITY_ID)
);

INSERT INTO ADDRESS(ADDRESS, CITY_ID)
SELECT DISTINCT P.ADDRESS, C.CITY_ID FROM PROJ_STG P
JOIN CITY C ON C.CITY=P.CITY;


CREATE TABLE EDUCATION (
  EDUCATION_ID SERIAL,
  EDUCATION_LEVEL VARCHAR(50),sele
  PRIMARY KEY (EDUCATION_ID)
);

INSERT INTO EDUCATION(EDUCATION_LEVEL)
SELECT DISTINCT education_lvl FROM PROJ_STG;

CREATE TABLE EMPLOYEE (
  EMP_ID VARCHAR(10) PRIMARY KEY,
  HIRE_DT DATE,
  EMAIL VARCHAR(100),
  EMP_NM VARCHAR(100),
  EDUCATION_ID INT REFERENCES EDUCATION(EDUCATION_ID)
);

INSERT INTO EMPLOYEE(EMP_ID, HIRE_DT, EMAIL, EMP_NM, EDUCATION_ID)
SELECT DISTINCT P.EMP_ID, P.HIRE_DT, P.EMAIL, P.EMP_NM, E.EDUCATION_ID FROM PROJ_STG P
JOIN EDUCATION E ON E.EDUCATION_LEVEL=P.education_lvl;

CREATE TABLE SALARY (
  SALARY_ID SERIAL,
  SALARY FLOAT,
  EMP_ID VARCHAR(10),
  PRIMARY KEY (SALARY_ID, EMP_ID)
);

INSERT INTO SALARY(SALARY, EMP_ID) 
SELECT DISTINCT SALARY, EMP_ID FROM PROJ_STG;


CREATE TABLE JOBS (
  JOB_ID SERIAL,
  JOB_TITLE VARCHAR(50),
  PRIMARY KEY (JOB_ID)
);

INSERT INTO JOBS(JOB_TITLE) 
SELECT DISTINCT JOB_TITLE FROM PROJ_STG;

CREATE TABLE DEPARTMENTS (
  DEPARTMENT_ID SERIAL,
  DEPARTMENT VARCHAR(50),
  PRIMARY KEY (DEPARTMENT_ID)
);

INSERT INTO DEPARTMENTS(DEPARTMENT) 
SELECT DISTINCT department_nm FROM PROJ_STG;


CREATE TABLE EMPLOYEE_HISTORY (
  EMP_ID VARCHAR(10) REFERENCES EMPLOYEE(EMP_ID),
  JOB_ID INT REFERENCES JOBS(JOB_ID),                                                                                                                                                                                                                                                                                                                                                                                               
  DEPARTMENT_ID INT REFERENCES DEPARTMENTS(DEPARTMENT_ID),
  MANAGER_ID VARCHAR(10),
  START_DT DATE,
  END_DT DATE,
  SALARY_ID INT,
  ADDRESS_ID INT  REFERENCES ADDRESS(ADDRESS_ID),
  PRIMARY KEY (EMP_ID, START_DT),
  FOREIGN KEY (EMP_ID, SALARY_ID) REFERENCES SALARY(EMP_ID, SALARY_ID)
);

INSERT INTO EMPLOYEE_HISTORY(EMP_ID, JOB_ID, DEPARTMENT_ID, MANAGER_ID, START_DT, END_DT, SALARY_ID, ADDRESS_ID)
SELECT DISTINCT P.EMP_ID, J.JOB_ID, D.DEPARTMENT_ID, M.EMP_ID, P.START_DT, P.END_DT, S.SALARY_ID, A.ADDRESS_ID FROM PROJ_STG P
JOIN EMPLOYEE M ON P.MANAGER=M.EMP_NM
JOIN SALARY S ON S.EMP_ID=P.EMP_ID AND S.SALARY=P.SALARY
JOIN ADDRESS A ON A.ADDRESS=P.ADDRESS
JOIN JOBS J ON J.JOB_TITLE=P.JOB_TITLE
JOIN DEPARTMENTS D on D.DEPARTMENT=P.DEPARTMENT_NM
;


--CRUD 1
select EH.emp_id, J.job_title, D.department from employee_history EH
JOIN JOBS ON J.JOB_ID=EH.JOB_ID
JOIN DEPARTMENTS D ON D.DEPARTMENT_ID=EH.DEPARTMENT_ID
where end_dt>current_date;

--CRUD 2
INSERT INTO JOBS (JOB_TITLE)
VALUES ('Web Programmer ');
SELECT * FROM JOBS;

--CRUD 3
UPDATE JOBS SET JOB_TITLE = 'Web Developer' WHERE JOB_TITLE = 'Web Programmer ';
SELECT * FROM JOBS;

--CRUD 4
delete JOBS WHERE JOB_TITLE = 'Web Programmer ';
SELECT * FROM JOBS;

--CRUD 5
select COUNT(EH.emp_id) AS EMPLOYEE_COUNT, D.department from employee_history EH
JOIN DEPARTMENTS D ON D.DEPARTMENT_ID=EH.DEPARTMENT_ID
where end_dt>current_date
GROUP BY D.department;

--CRUD 6
SELECT DISTINCT e.emp_nm, j.job_title, d.deparment, M.EMP_NM AS MANAGER_NAME, EH.start_dt, eh.end_dt FROM from employee_history EH
JOIN EMPLOYEE E on e.emp_id=eh.emp_id
JOIN JOBS ON J.JOB_ID=EH.JOB_ID
JOIN DEPARTMENTS D ON D.DEPARTMENT_ID=EH.DEPARTMENT_ID
JOIN employee_history MH ON M.EMP_ID=EH.MANAGER_ID
JOIN EMPLOYEE M ON MH.EMP_ID=M.EMP_ID
where e.emp_nm='Toni Lembeck';



